package com.pack.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.dao.DaoAuthenticationProvider;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.http.SessionCreationPolicy;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
@EnableWebSecurity
public class SecurityConfig {
    
    @Autowired
    private UserDetailsService userDetailsService;

    @Bean
    public PasswordEncoder passwordEncoder() {
        return new BCryptPasswordEncoder();
    }
    
    @Bean
    public DaoAuthenticationProvider authenticationProvider() {
    	DaoAuthenticationProvider provider=new DaoAuthenticationProvider();
    	
    	provider.setUserDetailsService(userDetailsService);
    	provider.setPasswordEncoder(passwordEncoder());
    }
    

    @Bean
    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
        http.csrf().disable()
           .authorizeHttpRequests((authorize) -> authorize
               .requestMatchers("/login").permitAll()
               .requestMatchers("/register").permitAll()
               .requestMatchers("/products").hasRole("USER")
               .requestMatchers("/cart").hasRole("USER")
               .anyRequest().authenticated()
            )
           .formLogin((form) -> form
               .loginPage("/login")
               .defaultSuccessUrl("/product", true)
            )
           .logout((logout) -> logout
               .logoutUrl("/logout")
               .logoutSuccessUrl("/login")
            )
           .httpBasic();

        return http.build();
    }
}